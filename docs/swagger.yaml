basePath: /v1
definitions:
  dto.AirportWeatherDTO:
    properties:
      id:
        type: string
      metar:
        type: string
      taf:
        type: string
    type: object
  dto.ControllerStats:
    properties:
      cab:
        example: 0.5
        type: number
      cid:
        example: 1
        type: integer
      controllerType:
        example: home
        type: string
      enroute:
        example: 0.5
        type: number
      first_name:
        example: Daniel
        type: string
      last_name:
        example: Hawton
        type: string
      operating_initials:
        example: DAN
        type: string
      rating:
        example: S1
        type: string
      terminal:
        example: 0.5
        type: number
    type: object
  dto.EventPositionRequest:
    properties:
      cid:
        type: integer
      position:
        type: string
    type: object
  dto.EventPositionResponse:
    properties:
      cid:
        type: integer
      id:
        type: integer
      position:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.EventRequest:
    properties:
      banner:
        type: string
      description:
        type: string
      end_date:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  dto.EventSignupRequest:
    properties:
      choice1:
        type: string
      choice2:
        type: string
      choice3:
        type: string
      notes:
        type: string
    type: object
  dto.EventSignupResponse:
    properties:
      choice1:
        type: string
      choice2:
        type: string
      choice3:
        type: string
      cid:
        type: integer
      id:
        type: integer
      notes:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.EventsResponse:
    properties:
      banner:
        type: string
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      positions:
        items:
          $ref: '#/definitions/dto.EventPositionResponse'
        type: array
      signups:
        items:
          $ref: '#/definitions/dto.EventSignupResponse'
        type: array
      start_date:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  dto.FacilityReportDTO:
    properties:
      duration:
        type: integer
      logon_time:
        type: string
      position:
        type: string
    type: object
  dto.FacilityStaffResponse:
    properties:
      atm:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      datm:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      ec:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      events:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      facilities:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      fe:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      instructor:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      mentor:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      ta:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      web:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
      wm:
        items:
          $ref: '#/definitions/dto.UserResponse'
        type: array
    type: object
  dto.FeedbackPatchRequest:
    properties:
      comments:
        type: string
      status:
        type: string
    type: object
  dto.FeedbackRequest:
    properties:
      callsign:
        type: string
      comments:
        type: string
      controller:
        type: string
      position:
        type: string
      rating:
        type: string
    required:
    - callsign
    - comments
    - controller
    - position
    - rating
    type: object
  dto.FeedbackResponse:
    properties:
      callsign:
        type: string
      comments:
        type: string
      contact_email:
        type: string
      controller:
        $ref: '#/definitions/dto.UserResponse'
      created_at:
        type: string
      id:
        type: integer
      position:
        type: string
      rating:
        type: string
      status:
        type: string
      submitter:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.OnlineController:
    properties:
      cid:
        example: 1
        type: integer
      controller:
        $ref: '#/definitions/dto.UserResponse'
      frequency:
        example: "118.000"
        type: string
      online_since:
        example: "2020-01-01T00:00:00Z"
        type: string
      position:
        example: ANC_00_CTR
        type: string
    type: object
  dto.StaffingRequest:
    properties:
      arrivalAirport:
        type: string
      comments:
        type: string
      date:
        type: string
      departureAirport:
        type: string
      pilots:
        type: integer
    required:
    - arrivalAirport
    - date
    - departureAirport
    - pilots
    type: object
  dto.StorageRequest:
    properties:
      category:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  dto.TrainingNoteRequest:
    properties:
      comments:
        type: string
      duration:
        type: string
      position:
        type: string
      session_date:
        type: string
      type:
        type: string
    type: object
  dto.TrainingReoccurringSessionCreateRequest:
    properties:
      notes:
        type: string
      position:
        type: string
      schedule:
        items:
          $ref: '#/definitions/dto.TrainingReoccurringSlot'
        type: array
    type: object
  dto.TrainingReoccurringSlot:
    properties:
      day_of_week:
        type: string
      time:
        type: string
    type: object
  dto.TrainingRequest:
    properties:
      created_at:
        type: string
      end:
        type: string
      id:
        type: string
      instructor:
        $ref: '#/definitions/dto.UserResponse'
      instructor_notes:
        type: string
      notes:
        type: string
      position:
        type: string
      slots:
        items:
          $ref: '#/definitions/dto.TrainingRequestSlot'
        type: array
      start:
        type: string
      status:
        type: string
      student:
        $ref: '#/definitions/dto.UserResponse'
      updated_at:
        type: string
    type: object
  dto.TrainingRequestCreateRequest:
    properties:
      notes:
        type: string
      position:
        type: string
      slots:
        items:
          $ref: '#/definitions/dto.TrainingRequestSlot'
        type: array
    type: object
  dto.TrainingRequestEditRequest:
    properties:
      end:
        type: string
      instructor:
        type: integer
      instructor_notes:
        type: string
      notes:
        type: string
      position:
        type: string
      start:
        type: string
      status:
        type: string
    type: object
  dto.TrainingRequestSlot:
    properties:
      end:
        type: string
      id:
        type: string
      start:
        type: string
    type: object
  dto.UserResponse:
    properties:
      certifications:
        $ref: '#/definitions/dto.UserResponseCertifications'
      cid:
        type: integer
      controller_type:
        type: string
      created_at:
        type: string
      discord_id:
        type: string
      division:
        type: string
      exempted_from_activity:
        type: boolean
      first_name:
        type: string
      last_name:
        type: string
      operating_initials:
        type: string
      rating:
        type: string
      region:
        type: string
      roles:
        items:
          type: string
        type: array
      roster_join_date:
        type: string
      status:
        type: string
      subdivision:
        type: string
      updated_at:
        type: string
    type: object
  dto.UserResponseCertifications:
    properties:
      approach:
        type: string
      enroute:
        type: string
      ground:
        type: string
      local:
        type: string
      major_approach:
        type: string
      major_ground:
        type: string
      major_local:
        type: string
      oceanic:
        type: string
    type: object
  github.com_adh-partnership_api_internal_v1_overflight.Flightsv1:
    properties:
      alt:
        example: 10500
        type: integer
      arr:
        example: KLMO
        type: string
      callsign:
        example: N462AW
        type: string
      cid:
        example: 876594
        type: integer
      dep:
        example: KLMO
        type: string
      facility:
        example: ZDV
        type: string
      hdg:
        example: 180
        type: integer
      lastSeen:
        example: "2020-01-01T00:00:00Z"
        type: string
      lat:
        example: -33.867
        type: number
      lon:
        example: 151.206
        type: number
      route:
        example: DCT
        type: string
      spd:
        example: 150
        type: integer
      type:
        example: C208
        type: string
    type: object
  internal_v1_overflight.Flightsv1:
    properties:
      alt:
        example: 10500
        type: integer
      arr:
        example: KLMO
        type: string
      callsign:
        example: N462AW
        type: string
      cid:
        example: 876594
        type: integer
      dep:
        example: KLMO
        type: string
      facility:
        example: ZDV
        type: string
      hdg:
        example: 180
        type: integer
      lastSeen:
        example: "2020-01-01T00:00:00Z"
        type: string
      lat:
        example: -33.867
        type: number
      lon:
        example: 151.206
        type: number
      route:
        example: DCT
        type: string
      spd:
        example: 150
        type: integer
      type:
        example: C208
        type: string
    type: object
  models.Airport:
    properties:
      arpt_id:
        example: FAI
        type: string
      arpt_name:
        example: FAIRBANKS INTL AIRPORT
        type: string
      arpt_status:
        example: O
        type: string
      atc:
        $ref: '#/definitions/models.AirportATC'
      city:
        example: Fairbanks
        type: string
      created_at:
        example: "2021-09-01T00:00:00Z"
        type: string
      elevation:
        example: 13
        type: number
      icao_id:
        example: PAFA
        type: string
      latitude:
        example: 40.639801
        type: number
      longitude:
        example: -73.7789
        type: number
      metar:
        type: string
      resp_artcc_id:
        example: ZNY
        type: string
      state_code:
        example: AK
        type: string
      taf:
        type: string
      twr_type_code:
        example: T
        type: string
      updated_at:
        example: "2021-09-01T00:00:00Z"
        type: string
    type: object
  models.AirportATC:
    properties:
      apch_p_prov_type_cd:
        example: A
        type: string
      apch_p_provider:
        example: FAI
        type: string
      apch_s_prov_type_cd:
        example: A
        type: string
      apch_s_provider:
        example: ANC
        type: string
      arpt_id:
        example: JFK
        type: string
      created_at:
        example: "2021-09-01T00:00:00Z"
        type: string
      dep_p_prov_type_cd:
        example: A
        type: string
      dep_p_provider:
        example: FAI
        type: string
      dep_s_prov_type_cd:
        example: A
        type: string
      dep_s_provider:
        example: ANC
        type: string
      facility_type:
        example: ATCT-A/C
        type: string
      primary_apch_radio_call:
        example: Fairbanks
        type: string
      primary_dep_radio_call:
        example: Fairbanks
        type: string
      secondary_apch_radio_call:
        example: Anchorage
        type: string
      secondary_dep_radio_call:
        example: Anchorage
        type: string
      twr_call:
        example: Fairbanks
        type: string
      twr_hrs:
        example: 1200-0100 local time
        type: string
      twr_operator_code:
        example: A
        type: string
      updated_at:
        example: "2021-09-01T00:00:00Z"
        type: string
    type: object
  models.AirportChart:
    properties:
      arpt_id:
        example: FAI
        type: string
      chart_code:
        example: DP
        type: string
      chart_name:
        example: RDFLG FOUR (RNAV)
        type: string
      chart_url:
        example: https://aeronav.faa.gov/d-tpp/2212/01234RDFLG.PDF
        type: string
      created_at:
        example: "2021-09-01T00:00:00Z"
        type: string
      cycle:
        example: 2213
        type: integer
      from_date:
        example: "2021-09-01T00:00:00Z"
        type: string
      to_date:
        example: "2021-09-30T00:00:00Z"
        type: string
      updated_at:
        example: "2021-09-01T00:00:00Z"
        type: string
    type: object
  models.Document:
    properties:
      category:
        example: sops
        type: string
      created_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      created_by:
        $ref: '#/definitions/models.User'
      created_by_id:
        example: 1
        type: integer
      description:
        example: Description of document
        type: string
      id:
        example: 1
        type: integer
      name:
        example: document name
        type: string
      updated_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      updated_by:
        $ref: '#/definitions/models.User'
      updated_by_id:
        example: 1
        type: integer
      url:
        example: https://www.example.com/document.pdf
        type: string
    type: object
  models.Event:
    properties:
      banner:
        type: string
      created_at:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      positions:
        items:
          $ref: '#/definitions/models.EventPosition'
        type: array
      signups:
        items:
          $ref: '#/definitions/models.EventSignup'
        type: array
      start_date:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.EventPosition:
    properties:
      created_at:
        type: string
      id:
        type: integer
      position:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.EventSignup:
    properties:
      choice1:
        type: string
      choice2:
        type: string
      choice3:
        type: string
      created_at:
        type: string
      id:
        type: integer
      notes:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.Rating:
    properties:
      id:
        example: 1
        type: integer
      long:
        example: Observer
        type: string
      short:
        example: OBS
        type: string
    type: object
  models.Role:
    properties:
      created_at:
        type: string
      id:
        example: 1
        type: integer
      name:
        example: wm
        type: string
      updated_at:
        type: string
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.TrainingNote:
    properties:
      comments:
        type: string
      controller:
        $ref: '#/definitions/models.User'
      controller_id:
        type: integer
      created_at:
        type: string
      duration:
        type: string
      id:
        type: integer
      instructor:
        $ref: '#/definitions/models.User'
      instructor_id:
        type: integer
      position:
        type: string
      session_date:
        type: string
      type:
        type: string
      updated_at:
        type: string
      vatusa_id:
        type: integer
    type: object
  models.User:
    properties:
      appCertification:
        description: 'Must be one of : none, training, solo, certified, cantrain'
        example: certified
        type: string
      cid:
        example: 876594
        type: integer
      controllerType:
        description: 'Must be one of: none, active, inactive, loa'
        example: home
        type: string
      created_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      ctrCertification:
        description: 'Must be one of : none, training, solo, certified, cantrain'
        example: none
        type: string
      discord_id:
        example: "123456789012345678"
        type: string
      division:
        example: USA
        type: string
      email:
        example: wm@denartcc.org
        type: string
      exemptedFromActivity:
        example: false
        type: boolean
      first_name:
        example: Daniel
        type: string
      gndCertification:
        description: 'Must be one of : none, training, solo, certified, cantrain'
        example: certified
        type: string
      last_name:
        example: Hawton
        type: string
      lclCertification:
        description: 'Must be one of : none, training, solo, certified, cantrain'
        example: certified
        type: string
      majgndCertification:
        description: 'Must be one of : none, training, solo, certified, cantrain'
        example: certified
        type: string
      majorappCertification:
        description: 'Must be one of : none, training, solo, certified, cantrain'
        example: certified
        type: string
      majorlclCertification:
        description: 'Must be one of : none, training, solo, certified, cantrain'
        example: certified
        type: string
      oceanicCertification:
        description: 'Must be one of : none, training, certified, cantrain'
        example: none
        type: string
      operating_initials:
        example: DH
        type: string
      rating:
        $ref: '#/definitions/models.Rating'
      region:
        example: AMAS
        type: string
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      roster_join_date:
        example: "2020-01-01T00:00:00Z"
        type: string
      status:
        description: 'Must be one of: none, active, inactive, loa'
        example: active
        type: string
      subdivision:
        description: This may be blank
        example: ZDV
        type: string
      updated_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      updateid:
        description: Internally used identifier during scheduled updates for removals
        type: string
    type: object
  models.VisitorApplication:
    properties:
      created_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      updated_at:
        example: "2020-01-01T00:00:00Z"
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  response.R:
    properties:
      data: {}
      status:
        type: string
    type: object
host: network.denartcc.org
info:
  contact:
    email: daniel@hawton.org
    name: Daniel Hawton
  description: Session Cookie
  license:
    name: Apache
    url: https://github.com/adh-partnership/api/blob/main/LICENSE
  title: ADH API
  version: "1.0"
paths:
  /live/:facility:
    get:
      parameters:
      - description: Facility, defaults to ZDV if no facility id provided
        in: path
        name: fac
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github.com_adh-partnership_api_internal_v1_overflight.Flightsv1'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Overflights for Facility [Legacy/Deprecated]
      tags:
      - overflight
  /v1/admin/logging:
    get:
      description: Get/Set Log Levels
      parameters:
      - description: Level to set
        in: query
        name: level
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
      summary: Get/Set Log Levels
      tags:
      - Admin
  /v1/airports/:center:
    get:
      description: Get airports in ARTCC
      parameters:
      - description: ARTCC identifier, ie ZAN
        in: path
        name: center
        required: true
        type: string
      - description: Include ATC information
        in: query
        name: atc
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Airport'
            type: array
      summary: Get airports in ARTCC
      tags:
      - Airports
  /v1/airports/:center/:id:
    get:
      description: Get Airport
      parameters:
      - description: ARTCC identifier, ie ZAN
        in: path
        name: center
        required: true
        type: string
      - description: Airport identifier, ie KATL [FAA Identifier or ICAO]
        in: path
        name: id
        required: true
        type: string
      - description: Include ATC information
        in: query
        name: atc
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Airport'
      summary: Get Airport
      tags:
      - Airports
  /v1/airports/:center/:id/atc:
    get:
      description: Get Airport ATC
      parameters:
      - description: ARTCC identifier, ie ZAN
        in: path
        name: center
        required: true
        type: string
      - description: Airport identifier, ie KATL [FAA Identifier or ICAO]
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AirportATC'
            type: array
      summary: Get Airport ATC
      tags:
      - Airports
  /v1/airports/:center/:id/charts:
    get:
      description: Get Airport Charts
      parameters:
      - description: ARTCC identifier, ie ZAN
        in: path
        name: center
        required: true
        type: string
      - description: Airport identifier, ie KATL [FAA Identifier or ICAO]
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AirportChart'
            type: array
      summary: Get Airport Charts
      tags:
      - Airports
  /v1/airports/:center/:id/weather:
    get:
      description: Get Airport Weather
      parameters:
      - description: ARTCC identifier, ie ZAN
        in: path
        name: center
        required: true
        type: string
      - description: Airport identifier, ie KATL [FAA Identifier or ICAO]
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AirportWeatherDTO'
      summary: Get Airport Weather
      tags:
      - Airports
  /v1/authorization/groups:
    get:
      description: Get Authorization Groups
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                type: string
              type: array
            type: object
      summary: Get Authorization Groups
      tags:
      - Auth
  /v1/events:
    get:
      description: Get Upcoming Events
      parameters:
      - description: Limit to X events, default 5 (max 10)
        in: query
        name: limit
        type: number
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.EventsResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Events
      tags:
      - Events
    post:
      description: Create an event
      parameters:
      - description: Event Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.EventRequest'
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Create Event
      tags:
      - Events
  /v1/events/{id}:
    delete:
      description: Delete an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: ""
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Delete Event
      tags:
      - Events
    get:
      description: Get an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EventsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Event
      tags:
      - Events
    patch:
      description: Patch an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Event Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.EventRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Patch Event
      tags:
      - Events
  /v1/events/{id}/positions:
    get:
      description: Get Positions for an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EventPosition'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Event Positions
      tags:
      - Events
    post:
      description: Add a position to an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Position. CID 0 means unassigned.
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/dto.EventPositionRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Add Event Position
      tags:
      - Events
  /v1/events/{id}/positions/{position}:
    delete:
      description: Delete a position from an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Position Name
        in: path
        name: position
        required: true
        type: string
      responses:
        "204":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Delete Event Position
      tags:
      - Events
    put:
      description: Update a position for an event.
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Position Name
        in: path
        name: position
        required: true
        type: string
      - description: Position. CID 0 means unassigned.
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/dto.EventPositionRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Update Event Position
      tags:
      - Events
  /v1/events/{id}/signup:
    delete:
      description: Delete User Signup. This will only work for the logged in user.
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: ""
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Delete User Signup
      tags:
      - Events
    post:
      description: Create/Edit User Signup for Event. This will only work for the
        logged in user.
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Signup
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/dto.EventSignupRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Create/Edit User Signup for Event
      tags:
      - Events
  /v1/feedback:
    get:
      description: Get Individual pilot feedback
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.FeedbackResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Individual Pilot Feedback
      tags:
      - Feedback
    post:
      description: Submit feedback for a pilot
      parameters:
      - description: Feedback
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.FeedbackRequest'
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Submit Pilot Feedback
      tags:
      - Feedback
  /v1/feedback/{id}:
    patch:
      description: 'Patch feedback for a pilot -- currently only the comments and
        status field can be patched. Accepted status values: approved, rejected'
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: integer
      - description: Feedback
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.FeedbackPatchRequest'
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Patch Pilot Feedback
      tags:
      - Feedback
  /v1/overflight:
    get:
      parameters:
      - description: Facility, defaults to ZDV if no facility id provided
        in: path
        name: fac
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github.com_adh-partnership_api_internal_v1_overflight.Flightsv1'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Overflights for Facility
      tags:
      - overflight
  /v1/overflight/:facility:
    get:
      parameters:
      - description: Facility, defaults to ZDV if no facility id provided
        in: path
        name: fac
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github.com_adh-partnership_api_internal_v1_overflight.Flightsv1'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Overflights for Facility
      tags:
      - overflight
  /v1/proxy/metar/{icao}:
    get:
      description: Proxy METAR Data. Deprecated. VATSIM's Cloudflare front may throttle
        this, so use our job fetched data where possible (/v1/weather/metar/:icao)
      parameters:
      - description: ICAO, multiple ICAOs can be separated by a comma
        in: path
        name: icao
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: '[Deprecated] Proxy METAR Data'
      tags:
      - Proxy
  /v1/proxy/taf/{icao}:
    get:
      description: Proxy TAF Data. Deprecated. VATSIM's Cloudflare front may throttle
        this, so use our job fetched data where possible (/v1/weather/taf/:icao)
      parameters:
      - description: ICAO
        in: path
        name: icao
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: '[Deprecated] Proxy TAF Data'
      tags:
      - Proxy
  /v1/staffing/:
    post:
      description: Submit a staffing request [Feature Gated]
      parameters:
      - description: Request Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StaffingRequest'
      responses:
        "204":
          description: ""
        "400":
          description: Invalid form submission
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Not logged in
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found -- feature disabled
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Submit a staffing request [Feature Gated]
      tags:
      - Staffing
  /v1/stats/historical/{year}/{month}:
    get:
      description: Get Historical Stats
      parameters:
      - description: Year
        in: path
        name: year
        type: integer
      - description: Month
        in: path
        name: month
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ControllerStats'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Historical Stats
      tags:
      - Stats
  /v1/stats/online:
    get:
      description: Get Online Controllers
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.OnlineController'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Online Controllers
      tags:
      - Stats
  /v1/stats/reports/facility:
    get:
      description: Get Facility Stats Report
      parameters:
      - description: Prefix, ie ANC
        in: query
        name: prefix
        type: string
      - description: Suffix, ie CTR
        in: query
        name: suffix
        type: string
      - description: From, ie 2020-01-01
        in: query
        name: from
        type: string
      - description: To, ie 2020-01-31
        in: query
        name: to
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.FacilityReportDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Facility Stats Report
      tags:
      - Stats
  /v1/storage:
    post:
      parameters:
      - description: Storage Object
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/dto.StorageRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Document'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Create storage object
      tags:
      - storage
  /v1/storage/:category:
    get:
      parameters:
      - description: Category, if applicable
        in: path
        name: category
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Document'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Storage Listing
      tags:
      - storage
  /v1/storage/:id:
    delete:
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/response.R'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Delete storage object
      tags:
      - storage
    put:
      parameters:
      - description: Storage Object
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/dto.StorageRequest'
      - description: Storage ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Document'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Update storage object
      tags:
      - storage
  /v1/storage/:id/file:
    put:
      parameters:
      - description: Storage ID
        in: path
        name: id
        required: true
        type: integer
      - description: File
        in: formData
        name: file
        required: true
        type: file
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Upload file data to storage object
      tags:
      - storage
  /v1/training/:cid:
    get:
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TrainingNote'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Training Records for cid
      tags:
      - training
    post:
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: string
      - description: Training Note
        in: body
        name: training
        required: true
        schema:
          $ref: '#/definitions/dto.TrainingNoteRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TrainingNote'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Create Training Record
      tags:
      - training
  /v1/training/:cid/:id:
    delete:
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Delete Training Record
      tags:
      - training
    put:
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Training Note
        in: body
        name: training
        required: true
        schema:
          $ref: '#/definitions/dto.TrainingNoteRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrainingNote'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Update Training Record
      tags:
      - training
  /v1/training/requests:
    get:
      parameters:
      - description: Filter by CID
        in: query
        name: cid
        type: string
      - description: Filter by Status
        in: query
        name: status
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/dto.TrainingRequest'
              type: array
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Training Sessions [Feature Gated]
      tags:
      - training
    post:
      parameters:
      - description: Training Session Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TrainingRequestCreateRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.TrainingRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Create new training session request for user [Feature Gated]
      tags:
      - training
  /v1/training/requests/{id}:
    get:
      parameters:
      - description: Training Session ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TrainingRequest'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Specific Training Request [Feature Gated]
      tags:
      - training
    patch:
      parameters:
      - description: Training Session Request ID
        in: path
        name: id
        required: true
        type: string
      - description: Training Session Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TrainingRequestEditRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TrainingRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Edit Training Session Request [Feature Gated]
      tags:
      - training
  /v1/training/requests/{id}/slots:
    post:
      parameters:
      - description: Training Session Request ID
        in: path
        name: id
        required: true
        type: string
      - description: Training Session Request Slot
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TrainingRequestSlot'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TrainingRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Add a slot to a request [Feature Gated]
      tags:
      - training
  /v1/training/requests/{id}/slots/{slot_id}:
    delete:
      parameters:
      - description: Training Session Request ID
        in: path
        name: id
        required: true
        type: string
      - description: Training Session Request Slot ID
        in: path
        name: slot_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TrainingRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Delete a slot from a request [Feature Gated]
      tags:
      - training
  /v1/training/requests/reoccurring:
    post:
      parameters:
      - description: Training Session Schedule
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TrainingReoccurringSessionCreateRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.R'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Create new reoccurring training session availability for instructor
        [Feature Gated]
      tags:
      - training
  /v1/user/:cid:
    get:
      parameters:
      - description: CID, defaults to logged in user
        in: path
        name: cid
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get User Information, if cid is not provided, defaults to logged in
        user
      tags:
      - user
    patch:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserResponse'
      - description: CID
        in: path
        name: cid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Patch User Information
      tags:
      - user
  /v1/user/:cid/roles:
    get:
      parameters:
      - description: CID, if not provided, defaults to logged in user
        in: path
        name: cid
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get User Information
      tags:
      - user
  /v1/user/:cid/roles/:role:
    delete:
      parameters:
      - description: Role
        in: path
        name: role
        required: true
        type: string
      - description: CID
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ""
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Remove User Role
      tags:
      - user
    put:
      parameters:
      - description: Role
        in: path
        name: role
        required: true
        type: string
      - description: CID
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ""
        "309":
          description: ""
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Add User Role
      tags:
      - user
  /v1/user/all:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserResponse'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Full Roster
      tags:
      - user
  /v1/user/discord/callback:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.R'
        "307":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Discord Callback
      tags:
      - user
      - oauth
  /v1/user/discord/link:
    get:
      parameters:
      - description: Redirect URL
        in: path
        name: redirect
        type: string
      responses:
        "307":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Link account and Discord account
      tags:
      - user
      - oauth
  /v1/user/login:
    get:
      parameters:
      - description: Redirect URL
        in: path
        name: redirect
        type: string
      responses:
        "307":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Login to account
      tags:
      - user
      - oauth
  /v1/user/login/callback:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.R'
        "307":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Login callback
      tags:
      - user
      - oauth
  /v1/user/logout:
    get:
      parameters:
      - description: Redirect URL
        in: query
        name: redirect
        type: string
      responses:
        "307":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Logout of account
      tags:
      - user
      - oauth
  /v1/user/roster:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserResponse'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Facility Roster
      tags:
      - user
  /v1/user/staff:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.FacilityStaffResponse'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get Facility Staff
      tags:
      - user
  /v1/user/visitor:
    get:
      description: Get visiting applications
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.VisitorApplication'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get visiting applications
      tags:
      - user
    post:
      description: Submit a Visitor Application
      responses:
        "204":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "406":
          description: Not Acceptable - Generally means doesn't meet requirements
          schema:
            $ref: '#/definitions/response.R'
        "409":
          description: Conflict - Generally means already applied
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Submit a Visitor Application
      tags:
      - user
  /v1/user/visitor/{id}:
    put:
      description: Handle Visitor Application
      parameters:
      - description: Visitor CID
        in: path
        name: id
        required: true
        type: integer
      - description: Action to take (accept, deny)
        in: body
        name: action
        required: true
        schema:
          type: string
      - description: Reason for action for denials
        in: body
        name: reason
        schema:
          type: string
      responses:
        "204":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Handle Visitor Application
      tags:
      - user
  /v1/weather/metar/{icao}:
    get:
      description: Get METAR Data
      parameters:
      - description: ICAO
        in: path
        name: icao
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get METAR Data
      tags:
      - Weather
  /v1/weather/taf/{icao}:
    get:
      description: Get TAF Data
      parameters:
      - description: ICAO
        in: path
        name: icao
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.R'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.R'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.R'
      summary: Get TAF Data
      tags:
      - Weather
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
