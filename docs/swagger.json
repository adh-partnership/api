{
    "swagger": "2.0",
    "info": {
        "description": "Session Cookie",
        "title": "ADH API",
        "contact": {
            "name": "Daniel Hawton",
            "email": "daniel@hawton.org"
        },
        "license": {
            "name": "Apache",
            "url": "https://github.com/adh-partnership/api/blob/main/LICENSE"
        },
        "version": "1.0"
    },
    "host": "network.denartcc.org",
    "basePath": "/v1",
    "paths": {
        "/email/templates/:name": {
            "get": {
                "description": "Get Email Template(s)",
                "tags": [
                    "Email"
                ],
                "summary": "Get Email Template(s)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of email template",
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EmailTemplate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "description": "Update Email Template",
                "tags": [
                    "Email"
                ],
                "summary": "Update Email Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of email template",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Email Template",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmailTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/feedback": {
            "get": {
                "description": "Get feedback for a pilot",
                "tags": [
                    "Feedback"
                ],
                "summary": "Get Pilot Feedback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Controller CID filter",
                        "name": "cid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status filter",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FeedbackResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "description": "Submit feedback for a pilot",
                "tags": [
                    "Feedback"
                ],
                "summary": "Submit Pilot Feedback",
                "parameters": [
                    {
                        "description": "Feedback",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/feedback/{id}": {
            "patch": {
                "description": "Patch feedback for a pilot -- currently only the status field can be patched",
                "tags": [
                    "Feedback"
                ],
                "summary": "Patch Pilot Feedback",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feedback ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Feedback",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FeedbackPatchRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/live/:facility": {
            "get": {
                "tags": [
                    "overflight"
                ],
                "summary": "Get Overflights for Facility [Legacy/Deprecated]",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility, defaults to ZDV if no facility id provided",
                        "name": "fac",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github.com_adh-partnership_api_internal_v1_overflight.Flightsv1"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/stats/historical/{year}/{month}": {
            "get": {
                "description": "Get Historical Stats",
                "tags": [
                    "Stats"
                ],
                "summary": "Get Historical Stats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "Month",
                        "name": "month",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ControllerStats"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/stats/online": {
            "get": {
                "description": "Get Online Controllers",
                "tags": [
                    "Stats"
                ],
                "summary": "Get Online Controllers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OnlineController"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/user/visitor": {
            "get": {
                "description": "Get visiting applications",
                "tags": [
                    "user"
                ],
                "summary": "Get visiting applications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VisitorApplication"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "description": "Submit a Visitor Application",
                "tags": [
                    "user"
                ],
                "summary": "Submit a Visitor Application",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable - Generally means doesn't meet requirements",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "409": {
                        "description": "Conflict - Generally means already applied",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/user/visitor/{id}": {
            "put": {
                "description": "Handle Visitor Application",
                "tags": [
                    "user"
                ],
                "summary": "Handle Visitor Application",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Visitor CID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action to take (accept, deny)",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Reason for action for denials",
                        "name": "reason",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/events": {
            "get": {
                "description": "Get Upcoming Events",
                "tags": [
                    "Events"
                ],
                "summary": "Get Events",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Limit to X events, default 5 (max 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EventsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an event",
                "tags": [
                    "Events"
                ],
                "summary": "Create Event",
                "parameters": [
                    {
                        "description": "Event Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}": {
            "get": {
                "description": "Get an event",
                "tags": [
                    "Events"
                ],
                "summary": "Get Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EventsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an event",
                "tags": [
                    "Events"
                ],
                "summary": "Delete Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch an event",
                "tags": [
                    "Events"
                ],
                "summary": "Patch Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}/positions": {
            "get": {
                "description": "Get Positions for an event",
                "tags": [
                    "Events"
                ],
                "summary": "Get Event Positions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EventPosition"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a position to an event",
                "tags": [
                    "Events"
                ],
                "summary": "Add Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Position. CID 0 means unassigned.",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventPositionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}/positions/{position}": {
            "put": {
                "description": "Update a position for an event.",
                "tags": [
                    "Events"
                ],
                "summary": "Update Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Position Name",
                        "name": "position",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Position. CID 0 means unassigned.",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventPositionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a position from an event",
                "tags": [
                    "Events"
                ],
                "summary": "Delete Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Position Name",
                        "name": "position",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}/signup": {
            "post": {
                "description": "Create/Edit User Signup for Event. This will only work for the logged in user.",
                "tags": [
                    "Events"
                ],
                "summary": "Create/Edit User Signup for Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Signup",
                        "name": "signup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete User Signup. This will only work for the logged in user.",
                "tags": [
                    "Events"
                ],
                "summary": "Delete User Signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/overflight": {
            "get": {
                "tags": [
                    "overflight"
                ],
                "summary": "Get Overflights for Facility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility, defaults to ZDV if no facility id provided",
                        "name": "fac",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github.com_adh-partnership_api_internal_v1_overflight.Flightsv1"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/overflight/:facility": {
            "get": {
                "tags": [
                    "overflight"
                ],
                "summary": "Get Overflights for Facility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility, defaults to ZDV if no facility id provided",
                        "name": "fac",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github.com_adh-partnership_api_internal_v1_overflight.Flightsv1"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/proxy/metar/{icao}": {
            "get": {
                "description": "Proxy METAR Data",
                "tags": [
                    "Proxy"
                ],
                "summary": "Proxy METAR Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO, multiple ICAOs can be separated by a comma",
                        "name": "icao",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/proxy/taf/{icao}": {
            "get": {
                "description": "Proxy TAF Data",
                "tags": [
                    "Proxy"
                ],
                "summary": "Proxy TAF Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO",
                        "name": "icao",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/storage": {
            "post": {
                "tags": [
                    "storage"
                ],
                "summary": "Create storage object",
                "parameters": [
                    {
                        "description": "Storage Object",
                        "name": "storage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StorageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Document"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/storage/:category": {
            "get": {
                "tags": [
                    "storage"
                ],
                "summary": "Get Storage Listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category, if applicable",
                        "name": "category",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Document"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/storage/:id": {
            "put": {
                "tags": [
                    "storage"
                ],
                "summary": "Update storage object",
                "parameters": [
                    {
                        "description": "Storage Object",
                        "name": "storage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StorageRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Document"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "storage"
                ],
                "summary": "Delete storage object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/storage/:id/file": {
            "put": {
                "tags": [
                    "storage"
                ],
                "summary": "Upload file data to storage object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/training/:cid": {
            "get": {
                "tags": [
                    "training"
                ],
                "summary": "Get Training Records for cid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrainingNote"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "training"
                ],
                "summary": "Create Training Record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Training Note",
                        "name": "training",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TrainingNote"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/training/:cid/:id": {
            "put": {
                "tags": [
                    "training"
                ],
                "summary": "Update Training Record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Training Note",
                        "name": "training",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrainingNote"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "training"
                ],
                "summary": "Delete Training Record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/:cid": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get User Information, if cid is not provided, defaults to logged in user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID, defaults to logged in user",
                        "name": "cid",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Patch User Information",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/:cid/roles": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get User Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID, if not provided, defaults to logged in user",
                        "name": "cid",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/:cid/roles/:role": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Add User Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "309": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Remove User Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/all": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get Full Roster",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/discord/callback": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Discord Callback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "307": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/discord/link": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Link account and Discord account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redirect URL",
                        "name": "redirect",
                        "in": "path"
                    }
                ],
                "responses": {
                    "307": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Login to account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redirect URL",
                        "name": "redirect",
                        "in": "path"
                    }
                ],
                "responses": {
                    "307": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/login/callback": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Login callback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "307": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/logout": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Logout of account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redirect URL",
                        "name": "redirect",
                        "in": "query"
                    }
                ],
                "responses": {
                    "307": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/roster": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get Facility Roster",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/staff": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get Facility Staff",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.FacilityStaffResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ControllerStats": {
            "type": "object",
            "properties": {
                "cab": {
                    "type": "number",
                    "example": 0.5
                },
                "cid": {
                    "type": "integer",
                    "example": 1
                },
                "controllerType": {
                    "type": "string",
                    "example": "home"
                },
                "enroute": {
                    "type": "number",
                    "example": 0.5
                },
                "first_name": {
                    "type": "string",
                    "example": "Daniel"
                },
                "last_name": {
                    "type": "string",
                    "example": "Hawton"
                },
                "rating": {
                    "type": "string",
                    "example": "S1"
                },
                "terminal": {
                    "type": "number",
                    "example": 0.5
                }
            }
        },
        "dto.EmailTemplateRequest": {
            "type": "object",
            "required": [
                "body",
                "edit_group",
                "subject"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "cc": {
                    "type": "string"
                },
                "edit_group": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "dto.EventPositionRequest": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "dto.EventPositionResponse": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserResponse"
                }
            }
        },
        "dto.EventRequest": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.EventSignupRequest": {
            "type": "object",
            "properties": {
                "choice1": {
                    "type": "string"
                },
                "choice2": {
                    "type": "string"
                },
                "choice3": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "dto.EventSignupResponse": {
            "type": "object",
            "properties": {
                "choice1": {
                    "type": "string"
                },
                "choice2": {
                    "type": "string"
                },
                "choice3": {
                    "type": "string"
                },
                "cid": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserResponse"
                }
            }
        },
        "dto.EventsResponse": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EventPositionResponse"
                    }
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EventSignupResponse"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.FacilityStaffResponse": {
            "type": "object",
            "properties": {
                "atm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "datm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "ec": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "fe": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "ta": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "wm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                }
            }
        },
        "dto.FeedbackPatchRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.FeedbackRequest": {
            "type": "object",
            "required": [
                "callsign",
                "comments",
                "controller",
                "position",
                "rating"
            ],
            "properties": {
                "callsign": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "controller": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                }
            }
        },
        "dto.FeedbackResponse": {
            "type": "object",
            "properties": {
                "callsign": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "controller": {
                    "$ref": "#/definitions/models.User"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "submitter": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "dto.StorageRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.TrainingNoteRequest": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "session_date": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "certifications": {
                    "$ref": "#/definitions/dto.UserResponseCertifications"
                },
                "cid": {
                    "type": "integer"
                },
                "controller_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "division": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "operating_initials": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subdivision": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.UserResponseCertifications": {
            "type": "object",
            "properties": {
                "approach": {
                    "type": "string"
                },
                "enroute": {
                    "type": "string"
                },
                "ground": {
                    "type": "string"
                },
                "local": {
                    "type": "string"
                },
                "major_approach": {
                    "type": "string"
                },
                "major_ground": {
                    "type": "string"
                },
                "major_local": {
                    "type": "string"
                }
            }
        },
        "github.com_adh-partnership_api_internal_v1_overflight.Flightsv1": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "integer",
                    "example": 10500
                },
                "arr": {
                    "type": "string",
                    "example": "KLMO"
                },
                "callsign": {
                    "type": "string",
                    "example": "N462AW"
                },
                "cid": {
                    "type": "integer",
                    "example": 876594
                },
                "dep": {
                    "type": "string",
                    "example": "KLMO"
                },
                "facility": {
                    "type": "string",
                    "example": "ZDV"
                },
                "hdg": {
                    "type": "integer",
                    "example": 180
                },
                "lastSeen": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "lat": {
                    "type": "number",
                    "example": -33.867
                },
                "lon": {
                    "type": "number",
                    "example": 151.206
                },
                "route": {
                    "type": "string",
                    "example": "DCT"
                },
                "spd": {
                    "type": "integer",
                    "example": 150
                },
                "type": {
                    "type": "string",
                    "example": "C208"
                }
            }
        },
        "internal_v1_overflight.Flightsv1": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "integer",
                    "example": 10500
                },
                "arr": {
                    "type": "string",
                    "example": "KLMO"
                },
                "callsign": {
                    "type": "string",
                    "example": "N462AW"
                },
                "cid": {
                    "type": "integer",
                    "example": 876594
                },
                "dep": {
                    "type": "string",
                    "example": "KLMO"
                },
                "facility": {
                    "type": "string",
                    "example": "ZDV"
                },
                "hdg": {
                    "type": "integer",
                    "example": 180
                },
                "lastSeen": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "lat": {
                    "type": "number",
                    "example": -33.867
                },
                "lon": {
                    "type": "number",
                    "example": 151.206
                },
                "route": {
                    "type": "string",
                    "example": "DCT"
                },
                "spd": {
                    "type": "integer",
                    "example": 150
                },
                "type": {
                    "type": "string",
                    "example": "C208"
                }
            }
        },
        "models.Document": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "sops"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "created_by": {
                    "$ref": "#/definitions/models.User"
                },
                "created_by_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Description of document"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "document name"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "updated_by": {
                    "$ref": "#/definitions/models.User"
                },
                "updated_by_id": {
                    "type": "integer",
                    "example": 1
                },
                "url": {
                    "type": "string",
                    "example": "https://www.example.com/document.pdf"
                }
            }
        },
        "models.EmailTemplate": {
            "description": "Email Templates, there will be no \"new\" for this object. These will be pre-existing but can be edited.",
            "type": "object",
            "properties": {
                "body": {
                    "description": "HTML-formatted email body",
                    "type": "string",
                    "example": "\u003ch1\u003eWelcome to the Virtual Denver ARTCC\u003c/h1\u003e"
                },
                "cc": {
                    "type": "string",
                    "example": "atm@denartcc.org,datm@denartcc.org"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "edit_group": {
                    "type": "string",
                    "example": "admin"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "welcome_message"
                },
                "subject": {
                    "type": "string",
                    "example": "Welcome to the Virtual Denver ARTCC"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventPosition"
                    }
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventSignup"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.EventPosition": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.EventSignup": {
            "type": "object",
            "properties": {
                "choice1": {
                    "type": "string"
                },
                "choice2": {
                    "type": "string"
                },
                "choice3": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.OnlineController": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "frequency": {
                    "type": "string",
                    "example": "118.000"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "logon_time": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "position": {
                    "type": "string",
                    "example": "ANC_TWR"
                },
                "update_id": {
                    "type": "string",
                    "example": "1"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.Rating": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "long": {
                    "type": "string",
                    "example": "Observer"
                },
                "short": {
                    "type": "string",
                    "example": "OBS"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "wm"
                },
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.TrainingNote": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "controller": {
                    "$ref": "#/definitions/models.User"
                },
                "controller_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instructor": {
                    "$ref": "#/definitions/models.User"
                },
                "instructor_id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "session_date": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vatusa_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "appCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "cid": {
                    "type": "integer",
                    "example": 876594
                },
                "controllerType": {
                    "description": "Must be one of: none, active, inactive, loa",
                    "type": "string",
                    "example": "home"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "ctrCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "none"
                },
                "discord_id": {
                    "type": "string",
                    "example": "123456789012345678"
                },
                "division": {
                    "type": "string",
                    "example": "USA"
                },
                "email": {
                    "type": "string",
                    "example": "wm@denartcc.org"
                },
                "first_name": {
                    "type": "string",
                    "example": "Daniel"
                },
                "gndCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "last_name": {
                    "type": "string",
                    "example": "Hawton"
                },
                "lclCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "majgndCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "majorappCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "majorlclCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "operating_initials": {
                    "type": "string",
                    "example": "DH"
                },
                "rating": {
                    "$ref": "#/definitions/models.Rating"
                },
                "region": {
                    "type": "string",
                    "example": "AMAS"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "status": {
                    "description": "Must be one of: none, active, inactive, loa",
                    "type": "string",
                    "example": "active"
                },
                "subdivision": {
                    "description": "This may be blank",
                    "type": "string",
                    "example": "ZDV"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "updateid": {
                    "description": "Internally used identifier during scheduled updates for removals",
                    "type": "string"
                }
            }
        },
        "models.VisitorApplication": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "response.R": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}