/*
 * Copyright ADH Partnership
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Daniel Hawton",
            "email": "daniel@hawton.org"
        },
        "license": {
            "name": "Apache",
            "url": "https://github.com/adh-partnership/api/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/live/:facility": {
            "get": {
                "tags": [
                    "overflight"
                ],
                "summary": "Get Overflights for Facility [Legacy/Deprecated]",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility, defaults to ZDV if no facility id provided",
                        "name": "fac",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_v1_overflight.Flightsv1"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/admin/logging": {
            "get": {
                "description": "Get/Set Log Levels",
                "tags": [
                    "Admin"
                ],
                "summary": "Get/Set Log Levels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Level to set",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/airports/:center": {
            "get": {
                "description": "Get airports in ARTCC",
                "tags": [
                    "Airports"
                ],
                "summary": "Get airports in ARTCC",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ARTCC identifier, ie ZAN",
                        "name": "center",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include ATC information",
                        "name": "atc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Airport"
                            }
                        }
                    }
                }
            }
        },
        "/v1/airports/:center/:id": {
            "get": {
                "description": "Get Airport",
                "tags": [
                    "Airports"
                ],
                "summary": "Get Airport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ARTCC identifier, ie ZAN",
                        "name": "center",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Airport identifier, ie KATL [FAA Identifier or ICAO]",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include ATC information",
                        "name": "atc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Airport"
                        }
                    }
                }
            }
        },
        "/v1/airports/:center/:id/atc": {
            "get": {
                "description": "Get Airport ATC",
                "tags": [
                    "Airports"
                ],
                "summary": "Get Airport ATC",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ARTCC identifier, ie ZAN",
                        "name": "center",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Airport identifier, ie KATL [FAA Identifier or ICAO]",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AirportATC"
                            }
                        }
                    }
                }
            }
        },
        "/v1/airports/:center/:id/charts": {
            "get": {
                "description": "Get Airport Charts",
                "tags": [
                    "Airports"
                ],
                "summary": "Get Airport Charts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ARTCC identifier, ie ZAN",
                        "name": "center",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Airport identifier, ie KATL [FAA Identifier or ICAO]",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AirportChart"
                            }
                        }
                    }
                }
            }
        },
        "/v1/airports/:center/:id/weather": {
            "get": {
                "description": "Get Airport Weather",
                "tags": [
                    "Airports"
                ],
                "summary": "Get Airport Weather",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ARTCC identifier, ie ZAN",
                        "name": "center",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Airport identifier, ie KATL [FAA Identifier or ICAO]",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AirportWeatherDTO"
                        }
                    }
                }
            }
        },
        "/v1/authorization/groups": {
            "get": {
                "description": "Get Authorization Groups",
                "tags": [
                    "Auth"
                ],
                "summary": "Get Authorization Groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/events": {
            "get": {
                "description": "Get Upcoming Events",
                "tags": [
                    "Events"
                ],
                "summary": "Get Events",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Limit to X events, default 5 (max 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.EventsResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an event",
                "tags": [
                    "Events"
                ],
                "summary": "Create Event",
                "parameters": [
                    {
                        "description": "Event Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}": {
            "get": {
                "description": "Get an event",
                "tags": [
                    "Events"
                ],
                "summary": "Get Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EventsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an event",
                "tags": [
                    "Events"
                ],
                "summary": "Delete Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch an event",
                "tags": [
                    "Events"
                ],
                "summary": "Patch Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}/positions": {
            "get": {
                "description": "Get Positions for an event",
                "tags": [
                    "Events"
                ],
                "summary": "Get Event Positions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EventPosition"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a position to an event",
                "tags": [
                    "Events"
                ],
                "summary": "Add Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Position. CID 0 means unassigned.",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventPositionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}/positions/{position}": {
            "put": {
                "description": "Update a position for an event.",
                "tags": [
                    "Events"
                ],
                "summary": "Update Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Position Name",
                        "name": "position",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Position. CID 0 means unassigned.",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventPositionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a position from an event",
                "tags": [
                    "Events"
                ],
                "summary": "Delete Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Position Name",
                        "name": "position",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}/signup": {
            "post": {
                "description": "Create/Edit User Signup for Event. This will only work for the logged in user.",
                "tags": [
                    "Events"
                ],
                "summary": "Create/Edit User Signup for Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Signup",
                        "name": "signup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete User Signup. This will only work for the logged in user.",
                "tags": [
                    "Events"
                ],
                "summary": "Delete User Signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/feedback": {
            "get": {
                "description": "Get Individual pilot feedback",
                "tags": [
                    "Feedback"
                ],
                "summary": "Get Individual Pilot Feedback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feedback ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.FeedbackResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "description": "Submit feedback for a pilot",
                "tags": [
                    "Feedback"
                ],
                "summary": "Submit Pilot Feedback",
                "parameters": [
                    {
                        "description": "Feedback",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/feedback/{id}": {
            "patch": {
                "description": "Patch feedback for a pilot -- currently only the comments and status field can be patched. Accepted status values: approved, rejected",
                "tags": [
                    "Feedback"
                ],
                "summary": "Patch Pilot Feedback",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feedback ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Feedback",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FeedbackPatchRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/overflight": {
            "get": {
                "tags": [
                    "overflight"
                ],
                "summary": "Get Overflights for Facility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility, defaults to ZDV if no facility id provided",
                        "name": "fac",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_v1_overflight.Flightsv1"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/overflight/:facility": {
            "get": {
                "tags": [
                    "overflight"
                ],
                "summary": "Get Overflights for Facility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility, defaults to ZDV if no facility id provided",
                        "name": "fac",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_v1_overflight.Flightsv1"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/proxy/metar/{icao}": {
            "get": {
                "description": "Proxy METAR Data. Deprecated. VATSIM's Cloudflare front may throttle this, so use our job fetched data where possible (/v1/weather/metar/:icao)",
                "tags": [
                    "Proxy"
                ],
                "summary": "[Deprecated] Proxy METAR Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO, multiple ICAOs can be separated by a comma",
                        "name": "icao",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/proxy/taf/{icao}": {
            "get": {
                "description": "Proxy TAF Data. Deprecated. VATSIM's Cloudflare front may throttle this, so use our job fetched data where possible (/v1/weather/taf/:icao)",
                "tags": [
                    "Proxy"
                ],
                "summary": "[Deprecated] Proxy TAF Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO",
                        "name": "icao",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/staffing/": {
            "post": {
                "description": "Submit a staffing request [Feature Gated]",
                "tags": [
                    "Staffing"
                ],
                "summary": "Submit a staffing request [Feature Gated]",
                "parameters": [
                    {
                        "description": "Request Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StaffingRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid form submission",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Not logged in",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found -- feature disabled",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/stats/historical/{year}/{month}": {
            "get": {
                "description": "Get Historical Stats",
                "tags": [
                    "Stats"
                ],
                "summary": "Get Historical Stats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "Month",
                        "name": "month",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ControllerStats"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/stats/online": {
            "get": {
                "description": "Get Online Controllers",
                "tags": [
                    "Stats"
                ],
                "summary": "Get Online Controllers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.OnlineController"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/stats/reports/facility": {
            "get": {
                "description": "Get Facility Stats Report",
                "tags": [
                    "Stats"
                ],
                "summary": "Get Facility Stats Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prefix, ie ANC",
                        "name": "prefix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Suffix, ie CTR",
                        "name": "suffix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "From, ie 2020-01-01",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To, ie 2020-01-31",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.FacilityReportDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/storage": {
            "post": {
                "tags": [
                    "storage"
                ],
                "summary": "Create storage object",
                "parameters": [
                    {
                        "description": "Storage Object",
                        "name": "storage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StorageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Document"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/storage/:category": {
            "get": {
                "tags": [
                    "storage"
                ],
                "summary": "Get Storage Listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category, if applicable",
                        "name": "category",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Document"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/storage/:id": {
            "put": {
                "tags": [
                    "storage"
                ],
                "summary": "Update storage object",
                "parameters": [
                    {
                        "description": "Storage Object",
                        "name": "storage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StorageRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Document"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "storage"
                ],
                "summary": "Delete storage object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/storage/:id/file": {
            "put": {
                "tags": [
                    "storage"
                ],
                "summary": "Upload file data to storage object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/training/:cid": {
            "get": {
                "tags": [
                    "training"
                ],
                "summary": "Get Training Records for cid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TrainingNote"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "training"
                ],
                "summary": "Create Training Record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Training Note",
                        "name": "training",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TrainingNote"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/training/:cid/:id": {
            "put": {
                "tags": [
                    "training"
                ],
                "summary": "Update Training Record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Training Note",
                        "name": "training",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrainingNote"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "training"
                ],
                "summary": "Delete Training Record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/training/requests": {
            "get": {
                "tags": [
                    "training"
                ],
                "summary": "Get Training Sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by CID",
                        "name": "cid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.TrainingRequest"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/training/requests/{id}": {
            "get": {
                "tags": [
                    "training"
                ],
                "summary": "Get Specific Training Request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Training Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingRequest"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "training"
                ],
                "summary": "Edit Training Session Request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Training Session Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Training Session Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingRequestEditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/training/requests/{id}/slots": {
            "post": {
                "tags": [
                    "training"
                ],
                "summary": "Add a slot to a request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Training Session Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Training Session Request Slot",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingRequestSlot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/training/requests/{id}/slots/{slot_id}": {
            "delete": {
                "tags": [
                    "training"
                ],
                "summary": "Delete a slot from a request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Training Session Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Training Session Request Slot ID",
                        "name": "slot_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/training/sessions": {
            "post": {
                "tags": [
                    "training"
                ],
                "summary": "Create new training session request for user",
                "parameters": [
                    {
                        "description": "Training Session Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingRequestCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/:cid": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get User Information, if cid is not provided, defaults to logged in user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID, defaults to logged in user",
                        "name": "cid",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Patch User Information",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/:cid/roles": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get User Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CID, if not provided, defaults to logged in user",
                        "name": "cid",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/:cid/roles/:role": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Add User Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "309": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Remove User Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/all": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get Full Roster",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/discord/callback": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Discord Callback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "307": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/discord/link": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Link account and Discord account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redirect URL",
                        "name": "redirect",
                        "in": "path"
                    }
                ],
                "responses": {
                    "307": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Login to account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redirect URL",
                        "name": "redirect",
                        "in": "path"
                    }
                ],
                "responses": {
                    "307": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/login/callback": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Login callback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "307": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/logout": {
            "get": {
                "tags": [
                    "user",
                    "oauth"
                ],
                "summary": "Logout of account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redirect URL",
                        "name": "redirect",
                        "in": "query"
                    }
                ],
                "responses": {
                    "307": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/roster": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get Facility Roster",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/staff": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get Facility Staff",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.FacilityStaffResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/visitor": {
            "get": {
                "description": "Get visiting applications",
                "tags": [
                    "user"
                ],
                "summary": "Get visiting applications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VisitorApplication"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            },
            "post": {
                "description": "Submit a Visitor Application",
                "tags": [
                    "user"
                ],
                "summary": "Submit a Visitor Application",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable - Generally means doesn't meet requirements",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "409": {
                        "description": "Conflict - Generally means already applied",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/user/visitor/{id}": {
            "put": {
                "description": "Handle Visitor Application",
                "tags": [
                    "user"
                ],
                "summary": "Handle Visitor Application",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Visitor CID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action to take (accept, deny)",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Reason for action for denials",
                        "name": "reason",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/weather/metar/{icao}": {
            "get": {
                "description": "Get METAR Data",
                "tags": [
                    "Weather"
                ],
                "summary": "Get METAR Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO",
                        "name": "icao",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        },
        "/v1/weather/taf/{icao}": {
            "get": {
                "description": "Get TAF Data",
                "tags": [
                    "Weather"
                ],
                "summary": "Get TAF Data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO",
                        "name": "icao",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.R"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AirportWeatherDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "metar": {
                    "type": "string"
                },
                "taf": {
                    "type": "string"
                }
            }
        },
        "dto.ControllerStats": {
            "type": "object",
            "properties": {
                "cab": {
                    "type": "number",
                    "example": 0.5
                },
                "cid": {
                    "type": "integer",
                    "example": 1
                },
                "controllerType": {
                    "type": "string",
                    "example": "home"
                },
                "enroute": {
                    "type": "number",
                    "example": 0.5
                },
                "first_name": {
                    "type": "string",
                    "example": "Daniel"
                },
                "last_name": {
                    "type": "string",
                    "example": "Hawton"
                },
                "operating_initials": {
                    "type": "string",
                    "example": "DAN"
                },
                "rating": {
                    "type": "string",
                    "example": "S1"
                },
                "terminal": {
                    "type": "number",
                    "example": 0.5
                }
            }
        },
        "dto.EventPositionRequest": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "dto.EventPositionResponse": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserResponse"
                }
            }
        },
        "dto.EventRequest": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.EventSignupRequest": {
            "type": "object",
            "properties": {
                "choice1": {
                    "type": "string"
                },
                "choice2": {
                    "type": "string"
                },
                "choice3": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "dto.EventSignupResponse": {
            "type": "object",
            "properties": {
                "choice1": {
                    "type": "string"
                },
                "choice2": {
                    "type": "string"
                },
                "choice3": {
                    "type": "string"
                },
                "cid": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserResponse"
                }
            }
        },
        "dto.EventsResponse": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EventPositionResponse"
                    }
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EventSignupResponse"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.FacilityReportDTO": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "logon_time": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "dto.FacilityStaffResponse": {
            "type": "object",
            "properties": {
                "atm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "datm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "ec": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "fe": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "instructor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "mentor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "ta": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "web": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                },
                "wm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                }
            }
        },
        "dto.FeedbackPatchRequest": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.FeedbackRequest": {
            "type": "object",
            "required": [
                "callsign",
                "comments",
                "controller",
                "position",
                "rating"
            ],
            "properties": {
                "callsign": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "controller": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                }
            }
        },
        "dto.FeedbackResponse": {
            "type": "object",
            "properties": {
                "callsign": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "controller": {
                    "$ref": "#/definitions/dto.UserResponse"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "submitter": {
                    "$ref": "#/definitions/dto.UserResponse"
                }
            }
        },
        "dto.OnlineController": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1
                },
                "controller": {
                    "$ref": "#/definitions/dto.UserResponse"
                },
                "frequency": {
                    "type": "string",
                    "example": "118.000"
                },
                "online_since": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "position": {
                    "type": "string",
                    "example": "ANC_00_CTR"
                }
            }
        },
        "dto.StaffingRequest": {
            "type": "object",
            "required": [
                "arrivalAirport",
                "date",
                "departureAirport",
                "pilots"
            ],
            "properties": {
                "arrivalAirport": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "departureAirport": {
                    "type": "string"
                },
                "pilots": {
                    "type": "integer"
                }
            }
        },
        "dto.StorageRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.TrainingNoteRequest": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "session_date": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.TrainingRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instructor": {
                    "$ref": "#/definitions/dto.UserResponse"
                },
                "instructor_notes": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TrainingRequestSlot"
                    }
                },
                "start": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "student": {
                    "$ref": "#/definitions/dto.UserResponse"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.TrainingRequestCreateRequest": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TrainingRequestSlot"
                    }
                }
            }
        },
        "dto.TrainingRequestEditRequest": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "instructor": {
                    "type": "integer"
                },
                "instructor_notes": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.TrainingRequestSlot": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "certifications": {
                    "$ref": "#/definitions/dto.UserResponseCertifications"
                },
                "cid": {
                    "type": "integer"
                },
                "controller_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discord_id": {
                    "type": "string"
                },
                "division": {
                    "type": "string"
                },
                "exempted_from_activity": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "operating_initials": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roster_join_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subdivision": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.UserResponseCertifications": {
            "type": "object",
            "properties": {
                "approach": {
                    "type": "string"
                },
                "enroute": {
                    "type": "string"
                },
                "ground": {
                    "type": "string"
                },
                "local": {
                    "type": "string"
                },
                "major_approach": {
                    "type": "string"
                },
                "major_ground": {
                    "type": "string"
                },
                "major_local": {
                    "type": "string"
                },
                "oceanic": {
                    "type": "string"
                }
            }
        },
        "github.com_adh-partnership_api_internal_v1_overflight.Flightsv1": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "integer",
                    "example": 10500
                },
                "arr": {
                    "type": "string",
                    "example": "KLMO"
                },
                "callsign": {
                    "type": "string",
                    "example": "N462AW"
                },
                "cid": {
                    "type": "integer",
                    "example": 876594
                },
                "dep": {
                    "type": "string",
                    "example": "KLMO"
                },
                "facility": {
                    "type": "string",
                    "example": "ZDV"
                },
                "hdg": {
                    "type": "integer",
                    "example": 180
                },
                "lastSeen": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "lat": {
                    "type": "number",
                    "example": -33.867
                },
                "lon": {
                    "type": "number",
                    "example": 151.206
                },
                "route": {
                    "type": "string",
                    "example": "DCT"
                },
                "spd": {
                    "type": "integer",
                    "example": 150
                },
                "type": {
                    "type": "string",
                    "example": "C208"
                }
            }
        },
        "internal_v1_overflight.Flightsv1": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "integer",
                    "example": 10500
                },
                "arr": {
                    "type": "string",
                    "example": "KLMO"
                },
                "callsign": {
                    "type": "string",
                    "example": "N462AW"
                },
                "cid": {
                    "type": "integer",
                    "example": 876594
                },
                "dep": {
                    "type": "string",
                    "example": "KLMO"
                },
                "facility": {
                    "type": "string",
                    "example": "ZDV"
                },
                "hdg": {
                    "type": "integer",
                    "example": 180
                },
                "lastSeen": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "lat": {
                    "type": "number",
                    "example": -33.867
                },
                "lon": {
                    "type": "number",
                    "example": 151.206
                },
                "route": {
                    "type": "string",
                    "example": "DCT"
                },
                "spd": {
                    "type": "integer",
                    "example": 150
                },
                "type": {
                    "type": "string",
                    "example": "C208"
                }
            }
        },
        "models.Airport": {
            "type": "object",
            "properties": {
                "arpt_id": {
                    "type": "string",
                    "example": "FAI"
                },
                "arpt_name": {
                    "type": "string",
                    "example": "FAIRBANKS INTL AIRPORT"
                },
                "arpt_status": {
                    "type": "string",
                    "example": "O"
                },
                "atc": {
                    "$ref": "#/definitions/models.AirportATC"
                },
                "city": {
                    "type": "string",
                    "example": "Fairbanks"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "elevation": {
                    "type": "number",
                    "example": 13
                },
                "icao_id": {
                    "type": "string",
                    "example": "PAFA"
                },
                "latitude": {
                    "type": "number",
                    "example": 40.639801
                },
                "longitude": {
                    "type": "number",
                    "example": -73.7789
                },
                "metar": {
                    "type": "string"
                },
                "resp_artcc_id": {
                    "type": "string",
                    "example": "ZNY"
                },
                "state_code": {
                    "type": "string",
                    "example": "AK"
                },
                "taf": {
                    "type": "string"
                },
                "twr_type_code": {
                    "type": "string",
                    "example": "T"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                }
            }
        },
        "models.AirportATC": {
            "type": "object",
            "properties": {
                "apch_p_prov_type_cd": {
                    "type": "string",
                    "example": "A"
                },
                "apch_p_provider": {
                    "type": "string",
                    "example": "FAI"
                },
                "apch_s_prov_type_cd": {
                    "type": "string",
                    "example": "A"
                },
                "apch_s_provider": {
                    "type": "string",
                    "example": "ANC"
                },
                "arpt_id": {
                    "type": "string",
                    "example": "JFK"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "dep_p_prov_type_cd": {
                    "type": "string",
                    "example": "A"
                },
                "dep_p_provider": {
                    "type": "string",
                    "example": "FAI"
                },
                "dep_s_prov_type_cd": {
                    "type": "string",
                    "example": "A"
                },
                "dep_s_provider": {
                    "type": "string",
                    "example": "ANC"
                },
                "facility_type": {
                    "type": "string",
                    "example": "ATCT-A/C"
                },
                "primary_apch_radio_call": {
                    "type": "string",
                    "example": "Fairbanks"
                },
                "primary_dep_radio_call": {
                    "type": "string",
                    "example": "Fairbanks"
                },
                "secondary_apch_radio_call": {
                    "type": "string",
                    "example": "Anchorage"
                },
                "secondary_dep_radio_call": {
                    "type": "string",
                    "example": "Anchorage"
                },
                "twr_call": {
                    "type": "string",
                    "example": "Fairbanks"
                },
                "twr_hrs": {
                    "type": "string",
                    "example": "1200-0100 local time"
                },
                "twr_operator_code": {
                    "type": "string",
                    "example": "A"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                }
            }
        },
        "models.AirportChart": {
            "type": "object",
            "properties": {
                "arpt_id": {
                    "type": "string",
                    "example": "FAI"
                },
                "chart_code": {
                    "type": "string",
                    "example": "DP"
                },
                "chart_name": {
                    "type": "string",
                    "example": "RDFLG FOUR (RNAV)"
                },
                "chart_url": {
                    "type": "string",
                    "example": "https://aeronav.faa.gov/d-tpp/2212/01234RDFLG.PDF"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "cycle": {
                    "type": "integer",
                    "example": 2213
                },
                "from_date": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                },
                "to_date": {
                    "type": "string",
                    "example": "2021-09-30T00:00:00Z"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-09-01T00:00:00Z"
                }
            }
        },
        "models.Document": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "sops"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "created_by": {
                    "$ref": "#/definitions/models.User"
                },
                "created_by_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Description of document"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "document name"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "updated_by": {
                    "$ref": "#/definitions/models.User"
                },
                "updated_by_id": {
                    "type": "integer",
                    "example": 1
                },
                "url": {
                    "type": "string",
                    "example": "https://www.example.com/document.pdf"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventPosition"
                    }
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventSignup"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.EventPosition": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.EventSignup": {
            "type": "object",
            "properties": {
                "choice1": {
                    "type": "string"
                },
                "choice2": {
                    "type": "string"
                },
                "choice3": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.Rating": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "long": {
                    "type": "string",
                    "example": "Observer"
                },
                "short": {
                    "type": "string",
                    "example": "OBS"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "wm"
                },
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.TrainingNote": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "controller": {
                    "$ref": "#/definitions/models.User"
                },
                "controller_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instructor": {
                    "$ref": "#/definitions/models.User"
                },
                "instructor_id": {
                    "type": "integer"
                },
                "position": {
                    "type": "string"
                },
                "session_date": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vatusa_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "appCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "cid": {
                    "type": "integer",
                    "example": 876594
                },
                "controllerType": {
                    "description": "Must be one of: none, active, inactive, loa",
                    "type": "string",
                    "example": "home"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "ctrCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "none"
                },
                "discord_id": {
                    "type": "string",
                    "example": "123456789012345678"
                },
                "division": {
                    "type": "string",
                    "example": "USA"
                },
                "email": {
                    "type": "string",
                    "example": "wm@denartcc.org"
                },
                "exemptedFromActivity": {
                    "type": "boolean",
                    "example": false
                },
                "first_name": {
                    "type": "string",
                    "example": "Daniel"
                },
                "gndCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "last_name": {
                    "type": "string",
                    "example": "Hawton"
                },
                "lclCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "majgndCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "majorappCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "majorlclCertification": {
                    "description": "Must be one of : none, training, solo, certified, cantrain",
                    "type": "string",
                    "example": "certified"
                },
                "oceanicCertification": {
                    "description": "Must be one of : none, training, certified, cantrain",
                    "type": "string",
                    "example": "none"
                },
                "operating_initials": {
                    "type": "string",
                    "example": "DH"
                },
                "rating": {
                    "$ref": "#/definitions/models.Rating"
                },
                "region": {
                    "type": "string",
                    "example": "AMAS"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "roster_join_date": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "status": {
                    "description": "Must be one of: none, active, inactive, loa",
                    "type": "string",
                    "example": "active"
                },
                "subdivision": {
                    "description": "This may be blank",
                    "type": "string",
                    "example": "ZDV"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "updateid": {
                    "description": "Internally used identifier during scheduled updates for removals",
                    "type": "string"
                }
            }
        },
        "models.VisitorApplication": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00Z"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "response.R": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "network.denartcc.org",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "ADH API",
	Description:      "Session Cookie",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
